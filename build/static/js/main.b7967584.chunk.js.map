{"version":3,"sources":["github-logo.svg","serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/NavBar.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Card","_ref","type","info","head","name","title","react_default","a","createElement","className","Object","entries","map","value","i","str","toUpperCase","length","key","CardList","data","user","components_Card","id","SearchBox","searchChange","catChange","responsiveSearch","style","onChange","placeholder","NavBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","setState","scroll","scrollY","state","el","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","padding","alt","src","winWidth","src_components_SearchBox","Component","background","width","margin","zIndex","borderRadius","marginBottom","App","getAll","asyncToGenerator","regenerator_default","mark","_callee","array","arr","arrayOfPromises","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","request","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","element","wrap","_context","prev","next","fetch","concat","asyncIterator","sent","done","json","undefined","results","Symbol","iterator","Math","floor","push","t0","return","finish","t1","loading","stop","onSearchChange","event","searchfield","target","onCatChange","category","innerWidth","_this2","prevProps","prevState","_this3","then","response","users","forEach","item","_this4","filterData","filter","hasOwnProperty","toLowerCase","includes","console","log","src_components_NavBar","components_CardList","marginTop","href","gitlog","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kPCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iICASC,EAhBF,SAAAC,GAAoB,IAAjBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,KACfC,EAAe,UAAPF,EAAiBC,EAAKE,KAAOF,EAAKG,MAChD,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mEACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQN,GACtBG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,SAA2BR,EAA3B,UACCS,OAAOC,QAAQT,GAAMU,IAAI,SAACC,EAAOC,GACjC,IAAIC,EAAMF,EAAM,GAAGG,cAAe,KAAOH,EAAM,GAG/C,OAFGE,EAAIE,OAAS,KAAKF,EAAI,MACPT,EAAAC,EAAAC,cAAA,KAAGU,IAAKJ,EAAGL,UAAU,KAAKM,EAA1B,SCMPI,EAdC,SAAAnB,GAAe,IAAXoB,EAAWpB,EAAXoB,KACnB,OACCA,EAAKR,IAAI,SAACS,EAAMP,GACf,OACCR,EAAAC,EAAAC,cAACc,EAAD,CACAJ,IAAMJ,EACNS,GAAIH,EAAKN,GAAGS,GACZrB,KAAMkB,EAAKN,GAAG,GACdb,KAAMmB,EAAKN,GAAG,QCoBHU,eA5BG,SAAAxB,GAAoD,IAAjDyB,EAAiDzB,EAAjDyB,aAAcC,EAAmC1B,EAAnC0B,UAAYC,EAAuB3B,EAAvB2B,iBAC9C,OACCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sDAChBc,GAAG,YAAYK,MAAOD,GAEpBrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iDAChBoB,SAAUH,GACTpB,EAAAC,EAAAC,cAAA,UAAQK,MAAM,OAAd,OACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,UAAd,UACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,WAAd,WACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,aAAd,aACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,WAAd,WACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,YAAd,YACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,SAAd,UAEHP,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SACAC,UAAU,6CACVmB,MAAOD,EACP1B,KAAK,SACL6B,YAAY,SACZD,SAAUJ,QCuBAM,qBAzCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAvB,OAAAwB,EAAA,EAAAxB,CAAAyB,KAAAJ,IACbE,EAAAvB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAzB,OAAA2B,EAAA,EAAA3B,CAAAqB,GAAAO,KAAAH,KAAMH,KAIVO,aAAe,WACXN,EAAKO,SAAS,CAACC,OAAQ9C,OAAO+C,WAJ9BT,EAAKU,MAAQ,GAFAV,mFAUb,IAAMW,EAAKC,SAASC,cAAc,OAClCX,KAAKK,SAAS,CAACO,IAAKH,EAAGI,UAAWC,OAAQL,EAAGM,eAC7CvD,OAAOwD,iBAAiB,SAAUhB,KAAKI,2DAIvCJ,KAAKQ,MAAMF,OAASN,KAAKQ,MAAMI,IAC3BF,SAASC,cAAc,OAAOlB,MAAMwB,QAAU,OAC9CP,SAASC,cAAc,OAAOlB,MAAMwB,QAAU,wCAItD,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACfH,EAAAC,EAAAC,cAAA,OAAK6C,IAAI,WACPC,IAAI,6GACJ1B,MAAO,CAACqB,OAAQ,UAEjBd,KAAKH,MAAMuB,SAAW,IACnBjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgD,EAAD,CAAW/B,aAAcU,KAAKH,MAAMP,aAAcC,UAAWS,KAAKH,MAAMN,aAG5E,KACApB,EAAAC,EAAAC,cAAA,oBAnCeiD,+BCEf7B,EAAQ,CACZ8B,WAAY,OACZN,QAAS,OACTO,MAAO,OACPC,OAAQ,IACRC,OAAQ,IACRC,aAAc,OAGVnC,EAAmB,CACvBgC,MAAO,OACPI,aAAc,SACdX,QAAS,UAgIIY,cA3Hd,SAAAA,IAAc,IAAA/B,EAAA,OAAAvB,OAAAwB,EAAA,EAAAxB,CAAAyB,KAAA6B,IACb/B,EAAAvB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAzB,OAAA2B,EAAA,EAAA3B,CAAAsD,GAAA1B,KAAAH,QAmDD8B,OApDcvD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAA5D,EAAA6D,KAoDL,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3D,EAAAN,EAAAkE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlB,EAAA5D,EAAA+E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEFlB,EAAM,GACNC,GAFAF,EAAQ,CAAC,UAAW,SAAU,YAAa,UAAW,WAAY,UAE1C1D,IAAI,SAAAX,GAAI,OAAEyF,MAAK,wBAAAC,OAAyB1F,EAAzB,oBAHrCwE,GAAA,EAAAC,GAAA,EAAAa,EAAAC,KAAA,EAAAZ,EAAAlE,OAAAkF,EAAA,EAAAlF,CAIkB8D,GAJlB,cAAAe,EAAAE,KAAA,EAAAb,EAAAa,OAAA,cAAAZ,EAAAU,EAAAM,KAAApB,EAAAI,EAAAiB,KAAAP,EAAAE,KAAA,GAAAZ,EAAAhE,MAAA,WAAAiE,EAAAS,EAAAM,KAAApB,EAAA,CAAAc,EAAAE,KAAA,gBAIOV,EAJPD,EAAAS,EAAAE,KAAA,GAKYV,EAAQgB,OALpB,QAKD3E,EALCmE,EAAAM,KAMH/E,EAAE,EANCkE,GAAA,EAAAC,GAAA,EAAAC,OAAAc,EAAAT,EAAAC,KAAA,GAAAL,EAOa/D,EAAK6E,QAPlBC,OAAAC,YAAA,WAAAnB,GAAAI,EAAAD,EAAAM,QAAAK,KAAA,CAAAP,EAAAE,KAAA,gBAOEJ,EAPFD,EAAAvE,MAQNC,EAAIsF,KAAKC,MAAM9B,EAAItD,OAAO,IARpBsE,EAAAE,KAAA,GASAlB,EAAI+B,KAAK,CAAChC,EAAMxD,GAAIuE,IATpB,QAAAL,GAAA,EAAAO,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,UAAAN,GAAA,EAAAC,EAAAK,EAAAgB,GAAA,QAAAhB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAR,GAAA,MAAAG,EAAAqB,QAAArB,EAAAqB,SAAA,WAAAjB,EAAAC,KAAA,IAAAP,EAAA,CAAAM,EAAAE,KAAA,eAAAP,EAAA,eAAAK,EAAAkB,OAAA,mBAAAlB,EAAAkB,OAAA,YAAAhC,GAAA,EAAAc,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,SAAAb,GAAA,EAAAC,EAAAY,EAAAmB,GAAA,WAAAnB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAf,GAAA,MAAAG,EAAA4B,OAAA,CAAAjB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAAAb,EAAA4B,SAAA,WAAAjB,EAAAC,KAAA,IAAAd,EAAA,CAAAa,EAAAE,KAAA,eAAAd,EAAA,eAAAY,EAAAkB,OAAA,mBAAAlB,EAAAkB,OAAA,YAYRxE,EAAKO,SAAS,CAAEpB,KAAOmD,EAAMoC,SAAU,IACvChH,OAAO8C,OAAO,EAAE,GAbR,yBAAA8C,EAAAqB,SAAAvC,EAAAlC,KAAA,yDApDKF,EAsEd4E,eAAiB,SAACC,GACjB7E,EAAKO,SAAS,CAAEuE,YAAaD,EAAME,OAAOnG,SAvE7BoB,EA0EdgF,YAAc,SAACH,GACd7E,EAAKO,SAAS,CAAE0E,SAAUJ,EAAME,OAAOnG,SAzEvCoB,EAAKU,MAAQ,CACZvB,KAAM,GACN2F,YAAa,GACbG,SAAU,MACVP,SAAS,EACTpD,SAAU5D,OAAOwH,YAPLlF,mFAWM,IAAAmF,EAAAjF,KAcnBA,KAAK8B,SACLtE,OAAOwD,iBAAiB,SAAU,WAC3BiE,EAAK5E,SAAS,CAAEe,SAAU5D,OAAOwH,0DAItBE,EAAWC,GAAW,IAAAC,EAAApF,KACrC,GAAIA,KAAKQ,MAAMuE,WAAaI,EAAUJ,UAAmC,QAAvB/E,KAAKQ,MAAMuE,SAC5D/E,KAAKK,SAAS,CAAEmE,SAAS,IAC5BxE,KAAK8B,cAEE,GAAI9B,KAAKQ,MAAMuE,WAAaI,EAAUJ,SAAU,CACpD/E,KAAKK,SAAS,CAAEmE,SAAS,IACzB,IAAMpC,EAAM,GACVmB,MAAK,wBAAAC,OAAyBxD,KAAKQ,MAAMuE,SAApC,kBACRM,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAE,GACLA,EAAMzB,QAAQ0B,QAAQ,SAAAC,GACrBrD,EAAI+B,KAAK,CAACiB,EAAK5E,MAAMuE,SAAUU,MAEhCL,EAAK/E,SAAS,CAACpB,KAAOmD,EAAMoC,SAAU,MAGvChH,OAAO8C,OAAO,EAAE,qCA+BV,IAAAoF,EAAA1F,KACF2F,EAAa3F,KAAKQ,MAAMvB,KAAK2G,OAAO,SAAAH,GACzC,OACCA,EAAK,GAAGI,eAAe,SACvBJ,EAAK,GAAGvH,MAAM4H,cAAcC,SAASL,EAAKlF,MAAMoE,YAAYkB,eAC5DL,EAAK,GAAGxH,KAAK6H,cAAcC,SAASL,EAAKlF,MAAMoE,YAAYkB,iBAK7D,OAFAE,QAAQC,IAAIN,EAAW7G,QAGvBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAC6H,EAAD,CAAQ9E,SAAUpB,KAAKQ,MAAMY,SAAU9B,aAAcU,KAAK0E,eAAgBnF,UAAWS,KAAK8E,cAE1F3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACb0B,KAAKQ,MAAMY,SAAW,IACvBjD,EAAAC,EAAAC,cAAA,OAAKoB,MAAOA,GACVtB,EAAAC,EAAAC,cAACgD,EAAD,CAAW/B,aAAcU,KAAK0E,eAAgBnF,UAAWS,KAAK8E,YAActF,iBAAkBA,KAG3F,KAILQ,KAAKQ,MAAMgE,UAAWxE,KAAKQ,MAAMvB,KAAKH,OACrCX,EAAAC,EAAAC,cAAA,MAAIC,UAAW,SAAf,cACsB,IAAtBqH,EAAW7G,OACXX,EAAAC,EAAAC,cAAA,MAAIC,UAAW,SAAf,kBACAH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC8H,EAAD,CAAUlH,KAAS0G,EAAalG,MAAO,CAACiC,OAAQ,IAAK0E,UAAW,aAInEjI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qEACXH,EAAAC,EAAAC,cAAA,KAAGgI,KAAK,mDAAmDnI,MAAM,cAChEC,EAAAC,EAAAC,cAAA,OAAK8C,IAAKmF,IAAQpF,IAAI,cAAcJ,OAAO,OAAOU,MAAM,mBAnHjDF,mBChBlBiF,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAAQ/F,SAASgG,eAAe,SN0H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.b7967584.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.e8a84775.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ({ type, info }) => {\r\n\tconst head = (type!==\"films\")? info.name : info.title\r\n\treturn (\r\n\t\t<div className='tc bg-washed-blue dib br4 pa3 ma2 grow bw2 shadow-5 ba b--green'>\r\n\t\t\t<h1 className='navy'>{head}</h1>\r\n\t\t\t<p className='b blue f5'>∙{type}∙</p>\r\n\t\t\t{Object.entries(info).map((value, i)=> {\r\n\t\t\t\tlet str = value[0].toUpperCase() +': ' + value[1];\r\n\t\t\t\tif(str.length > 25) {str=null};\r\n\t\t\t\tconst smallInf = (<p key={i} className='b'>{str} </p>)\r\n\t\t\t\treturn smallInf;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList= ( { data }) => {\r\n\treturn (\r\n\t\tdata.map((user, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\tkey ={i} \r\n\t\t\t\tid={data[i].id} \r\n\t\t\t\tinfo={data[i][1]}\r\n\t\t\t\ttype={data[i][0]} />\r\n\t\t\t\t)\r\n\t\t})\r\n\t\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({ searchChange, catChange,  responsiveSearch }) => {\r\n\treturn (\r\n\t\t<div className= 'search-area flex flex-wrap items-center ml4 mt1 z-1'\r\n\t\tid=\"searchbox\" style={responsiveSearch}>\r\n\t\t\t\r\n\t\t\t\t<select className='tc text-black br2 bw1 b--solid b--gold pv2 mr2'\r\n\t\t\t\t\t\tonChange={catChange}>\r\n  \t\t\t\t\t<option value=\"all\">All</option>\r\n  \t\t\t\t\t<option value=\"people\">People</option>\r\n  \t\t\t\t\t<option value=\"planets\">Planets</option>\r\n  \t\t\t\t\t<option value=\"starships\">Starships</option>\r\n  \t\t\t\t\t<option value=\"species\">Species</option>\r\n  \t\t\t\t\t<option value=\"vehicles\">Vehicles</option>\t\r\n  \t\t\t\t\t<option value=\"films\">Films</option>\t\r\n\t\t\t\t</select>\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\tclassName='tc text-black br2 bw1 b--solid b--gold pv2' \r\n\t\t\t\t\tstyle={responsiveSearch}\r\n\t\t\t\t\ttype='search'\r\n\t\t\t\t\tplaceholder='search' \r\n\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.setState({scroll: window.scrollY});\r\n    }\r\n  \r\n  componentDidMount() {\r\n        const el = document.querySelector('nav');\r\n        this.setState({top: el.offsetTop, height: el.offsetHeight});\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n  \r\n  componentDidUpdate() {\r\n        this.state.scroll > this.state.top ? \r\n            document.querySelector('nav').style.padding = '10px' :\r\n            document.querySelector('nav').style.padding = '40px';\r\n    }\r\n  \r\n  render() {\r\n    return (\r\n      <nav className='header-items flex flex-wrap justify-between shadow-3'>\r\n      <img alt=\"starwars\"\r\n        src=\"https://vignette.wikia.nocookie.net/disney/images/8/8b/Starwars-logo.png/revision/latest?cb=20141129122237\"\r\n        style={{height: '40px'}}\r\n       />\r\n      {this.props.winWidth > 760 ?\r\n          <div>\r\n          <SearchBox searchChange={this.props.searchChange} catChange={this.props.catChange}  />\r\n        </div> \r\n        :\r\n      null}\r\n      <div>\r\n      </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport CardList from './components/CardList';\r\nimport './App.css';\r\nimport SearchBox from './components/SearchBox';\r\nimport NavBar from './components/NavBar';\r\nimport gitlog from './github-logo.svg';\r\n\r\nconst style = {\r\n  background: '#fff',\r\n  padding: '1rem',\r\n  width: '100%',\r\n  margin: '0',\r\n  zIndex: '1',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst responsiveSearch = {\r\n  width: '100%',\r\n  marginBottom: '0.5rem',\r\n  padding: '0.5rem'\r\n}\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tsearchfield: '',\r\n\t\t\tcategory: 'all',\r\n\t\t\tloading: true,\r\n\t\t\twinWidth: window.innerWidth\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//***** Promise.all fetching ********************************\r\n\t\t// const array = ['planets', 'people', 'starships'];\r\n\t\t// const arr = [];\r\n\t\t// Promise.all(array.map(type=> {\r\n\t\t// \treturn fetch(`https://swapi.co/api/${type}/?format=json`)\r\n\t\t// \t.then(resp=> resp.json())\r\n\t\t// })).then(res => { res.forEach(cat=> {\r\n\t\t// \tcat.results.forEach(data=> {\r\n\t\t// \t\tarr.push(data)\r\n\t\t//\t})\t\r\n\t\t// })\r\n\t\t// this.setState({data : arr , loading : false })});\r\n\t\t// ********************************************************\r\n\t\tthis.getAll();\r\n\t\twindow.addEventListener('resize', () => {\r\n        \tthis.setState({ winWidth: window.innerWidth })\r\n       });\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n  \t\t if (this.state.category !== prevState.category && this.state.category ==='all') {\r\n  \t\t \tthis.setState({ loading: true });\r\n\t\t\tthis.getAll();\r\n\t\t}\r\n  \t\t\telse if (this.state.category !== prevState.category) {\r\n  \t\t\t\tthis.setState({ loading: true });\r\n  \t\t\t\tconst arr = [];\r\n   \t\t\t\t fetch(`https://swapi.co/api/${this.state.category}/?format=json`)\r\n\t\t\t\t.then(response=>  response.json())\r\n\t\t\t\t.then(users => {\r\n\t\t\t\t\tusers.results.forEach(item=> {\r\n\t\t\t\t\t\tarr.push([this.state.category, item])\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({data : arr , loading : false })\r\n\r\n\t\t\t\t} );\r\n\t\t\t\twindow.scroll(0,0);\r\n  \t\t\t}\r\n\t}\r\n\r\n\tgetAll = async () => {\r\n\t\tconst array = ['planets', 'people', 'starships', 'species', 'vehicles', 'films'];\r\n\t\tconst arr = [];\r\n\t\tconst arrayOfPromises = array.map(type=>fetch(`https://swapi.co/api/${type}/?format=json`));\r\n\t\tfor await (let request of arrayOfPromises) {\r\n\t\t\tconst data = await request.json();\r\n\t\t\tlet i=0;\r\n\t\t\tfor (let element of data.results) {\r\n\t\t\t\ti = Math.floor(arr.length/10);\r\n\t\t\t\tawait arr.push([array[i], element])\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({ data : arr , loading : false });\r\n\t\twindow.scroll(0,0);\r\n\t}\r\n\r\n\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\tonCatChange = (event) => {\r\n\t\tthis.setState({ category: event.target.value })\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst filterData = this.state.data.filter(item => {\r\n\t\t\treturn (\r\n\t\t\t\titem[1].hasOwnProperty('title') ? \r\n\t\t\t\titem[1].title.toLowerCase().includes(this.state.searchfield.toLowerCase()) :\r\n\t\t\t\titem[1].name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t\t)\r\n\t\t});\r\n\t\tconsole.log(filterData.length)\r\n\r\n\t\treturn (\r\n\t\t<div className='tc'>\r\n\t\t\t<NavBar winWidth={this.state.winWidth} searchChange={this.onSearchChange} catChange={this.onCatChange}/>\r\n\t\t\t\r\n\t\t\t<div className=\"flex flex-wrap justify-center mv7\">\r\n\t\t\t\t{this.state.winWidth < 760 ?\r\n\t\t\t\t<div style={style}>\r\n\t\t\t \t\t<SearchBox searchChange={this.onSearchChange} catChange={this.onCatChange}  responsiveSearch={responsiveSearch} />\r\n\t\t\t \t</div> :\r\n      \t\t\t\r\n      \t\t\tnull}\r\n\t\t\t\t\r\n\r\n\t\t\t\t{\r\n\t\t\t\tthis.state.loading ||!this.state.data.length ?\r\n\t\t\t\t <h1 className= 'white'>Loading...</h1> : \r\n\t\t\t\t filterData.length === 0 ?\r\n\t\t\t\t <h1 className= 'white'>No items found</h1> :\r\n\t\t\t\t <div>\r\n\t\t\t\t\t <CardList data = { filterData } style={{zIndex: '5', marginTop: '500px'}}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<footer className=\"w-100 h4 flex items-center justify-center white bg-near-black z-2\">\r\n          <a href=\"https://github.com/zero-to-mastery/ZtM-Job-Board\" title=\"Repository\">\r\n           <img src={gitlog} alt='Github repo' height='40px' width='40px'/>\r\n          </a>\r\n        </footer>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport 'tachyons';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}